#/bin/bash

#$ -cwd
#$ -S /bin/bash
#$ -pe smp 5
#$ -l mf=20G
#$ -N nom_treball
#$ -e nom_arx_errors
#$ -o nom_arx_sortida
##$ -t 1-100
##$ -tc 15



options=options.txt
source $(echo $options)


########################################
#####   2_QC_FASTQC_before_trim    #####
########################################
set -e
quality=20


mkdir -p temp/2_QC_before_trim


## 2.1_obtaining_fastqchtml
#################################################################################
## Load modules

module load apps/fastqc-0.11.7

fastqc -t 24 temp/1_human_remove/nohuman/* --outdir temp/2_QC_before_trim/

sleep 10

########################################
#####        CHECK POINT 2         #####
########################################


#n=$(wc -l < temp/1_human_remove/1_filelist.txt)
n_expected_2=$((n * 2))

echo "Número esperado de archivos temporales: $n_expected"

while true; do
    current_files=$(find temp/2_QC_before_trim -maxdepth 1 -type f -name "*_fastqc.html" | wc -l)
    [[ $current_files -ge $n_expected_2 ]] && break
    echo "Check point 2 = archivos esperados no ok"
    sleep 10  # Espera un segundo antes de revisar nuevamente
done

echo "Check point 2 = archivos esperados ok"




## 2.2_MultiQC_aplication
#################################################################################

## Unio de tots els rports generats per 1_obtaining_fastqchtml.R amb MultiQC

## Carregar el mòdul multiqc
module load apps/multiqc-1.10.1  

#Generar el report
multiqc temp/2_QC_before_trim --outdir temp/2_QC_before_trim 



module unload apps/multiqc-1.10.1        



